version: '3.8'

services:
  # Frontend Service
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true # Helps with file watching in Docker
      - REACT_APP_MOVIE_SERVICE_URL=http://localhost:8001
      - REACT_APP_USER_SERVICE_URL=http://localhost:8002
      - REACT_APP_BOOKING_SERVICE_URL=http://localhost:8003
    # volumes:
    #   - ./frontend:/app
    depends_on:
      - movie-service
      - user-service
      - booking-service

  # Movie Service
  movie-service:
    build: ./movie-service
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@movie-db:5432/movie_db
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./movie-service:/app
      - ./movie-service/static:/app/static
      - ./movie-service/media:/app/media
    depends_on:
      movie-db:
        condition: service_healthy

  # User Service
  user-service:
    build: ./user-service
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@user-db:5432/user_db
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./user-service:/app
      - ./user-service/static:/app/static
    depends_on:
      user-db:
        condition: service_healthy

  # Booking Service
  booking-service:
    build: ./booking-service
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@booking-db:5432/booking_db
      - SECRET_KEY=${SECRET_KEY}
      - MOVIE_SERVICE_URL=http://movie-service:8000
      - USER_SERVICE_URL=http://user-service:8000
    volumes:
      - ./booking-service:/app
      - ./booking-service/static:/app/static
    depends_on:
      booking-db:
        condition: service_healthy
      movie-service:
        condition: service_started
      user-service:
        condition: service_started

  # Databases
  movie-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=movie_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - movie-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=user_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - user-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  booking-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=booking_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - booking-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  movie-db-data:
    driver: local
  user-db-data:
    driver: local
  booking-db-data:
    driver: local